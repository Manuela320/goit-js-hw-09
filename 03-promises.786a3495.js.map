{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkBA,MAAMC,EAAOC,SAASC,cAAc,SAGpCF,EAAKG,iBAAiB,UAAU,SAASC,GACvCA,EAAMC,iBAGN,MAAMC,EAAQC,SAASP,EAAKQ,SAAgB,MAAEC,OACxCC,EAAOH,SAASP,EAAKQ,SAAe,KAAEC,OACtCE,EAASJ,SAASP,EAAKQ,SAAiB,OAAEC,OAGhD,GAAIG,MAAMN,IAAUM,MAAMF,IAASE,MAAMD,GACvCE,MAAM,sDAKL,IAAE,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,KAC3B,SAAWC,GAlCd,IAAsBC,EAAUC,GAAVD,EAqCHD,EArCaE,EAmCNX,GAASS,EAAI,GAAKL,EAlCpC,IAAIQ,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,KA4BJQ,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBS,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBZ,QAAiBC,MAAU,IAEzEY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBS,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBd,QAAeC,MAAU,GAE1E,CAVD,CAUGH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Funcția pentru crearea promisiunii\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3; \n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nconst form = document.querySelector('.form');\n\n\nform.addEventListener('submit', function(event) {\n  event.preventDefault();\n\n\n  const delay = parseInt(form.elements['delay'].value);\n  const step = parseInt(form.elements['step'].value);\n  const amount = parseInt(form.elements['amount'].value);\n\n  \n  if (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n    alert('Please fill in all fields with valid numbers.');\n    return;\n  }\n\n  // Creăm și gestionăm promisiunile\n  for (let i = 1; i <= amount; i++) {\n    (function (i) { \n      const currentDelay = delay + (i - 1) * step; //  delay-ul pentru fiecare promise\n\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    })(i);\n  }\n});"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","elements","value","step","amount","isNaN","alert","i1","i","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.786a3495.js.map"}