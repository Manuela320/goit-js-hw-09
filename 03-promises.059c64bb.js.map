{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAkBA,IAAMC,EAAOC,SAASC,cAAc,SAGpCF,EAAKG,iBAAiB,UAAU,SAASC,GACvCA,EAAMC,iBAGN,IAAMC,EAAQC,SAASP,EAAKQ,SAAgB,MAAEC,OACxCC,EAAOH,SAASP,EAAKQ,SAAe,KAAEC,OACtCE,EAASJ,SAASP,EAAKQ,SAAiB,OAAEC,OAGhD,GAAIG,MAAMN,IAAUM,MAAMF,IAASE,MAAMD,GACvCE,MAAM,sDAKL,IAAE,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,KAC3B,SAAWC,GACT,IAnCiBC,EAAUC,GAAVD,EAqCHD,EArCaE,EAmCNX,GAASS,EAAI,GAAKL,EAlCpC,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KA4BEQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBU,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAEvEc,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,GAExE,CAVD,CAUGH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Funcția pentru crearea promisiunii\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3; \n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nconst form = document.querySelector('.form');\n\n\nform.addEventListener('submit', function(event) {\n  event.preventDefault();\n\n\n  const delay = parseInt(form.elements['delay'].value);\n  const step = parseInt(form.elements['step'].value);\n  const amount = parseInt(form.elements['amount'].value);\n\n  \n  if (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n    alert('Please fill in all fields with valid numbers.');\n    return;\n  }\n\n  // Creăm și gestionăm promisiunile\n  for (let i = 1; i <= amount; i++) {\n    (function (i) { \n      const currentDelay = delay + (i - 1) * step; //  delay-ul pentru fiecare promise\n\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    })(i);\n  }\n});"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","elements","value","step","amount","isNaN","alert","i1","i","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.059c64bb.js.map"}